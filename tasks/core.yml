---
###############################################################################
# MagicMirror Core
###############################################################################
# Caculate core mirror variables for installation and upgrade.
#
# Generates:
#   _mirror_target: str full version (vx.x.x) to install.
#   _mirror_url: str download url for current release.
#   _mirror_install_dir: str versioned install location.
#   _mirror_archive: str local versioned archive location.
#   _mirror_modules: list of dicts containing modules requiring installation.
#
# Reference:
# * https://github.com/MichMich/MagicMirror/releases

- name: 'core | determine latest release version number'
  block:
    - name: 'core | get release metadata'
      ansible.builtin.uri:
        url: 'https://api.github.com/repos/MichMich/MagicMirror/releases/latest'
        return_content: true
      register: _mirror_remote_metadata

    - name: 'core | set latest release'
      ansible.builtin.set_fact:
        _mirror_target: '{{ _mirror_remote_metadata.json.tag_name }}'
  when: mirror_version == 'latest'

- name: 'core | set version target ({{ mirror_version }})'
  ansible.builtin.set_fact:
    _mirror_target: '{{ mirror_version }}'
  when: mirror_version != 'latest'

- name: 'core | generate versioned locations'
  ansible.builtin.set_fact:
    _mirror_url:         'https://api.github.com/repos/MichMich/MagicMirror/tarball/{{ _mirror_target }}'
    _mirror_install_dir: '{{ mirror_default_install_dir }}/mirror-{{ _mirror_target }}'
    _mirror_archive:     '/tmp/mirror-{{ _mirror_target }}.tar.gz'
    _mirror_modules:     []

- name: 'core | generate custom module list'
  ansible.builtin.set_fact:
    _mirror_modules: '{{ _mirror_modules + [item] }}'
  when: item.source|default('')|length > 0
  loop: '{{ mirror_modules }}'
